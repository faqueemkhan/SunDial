<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather & Time App</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        /* Resetting some default styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif; /* More modern font */
            background-image: linear-gradient(135deg, #604d74, #a488ac); /* Vibrant gradient background */
            background-size: cover;
            background-position: center;
            height: 100vh;
            color: #f3eeee;
            text-align: center;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            transition: background 0.5s ease;
        }

        .container {
            background: rgba(255, 255, 255, 0.1); /* Semi-transparent white */
            border-radius: 20px;
            padding: 40px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(15px); /* Frosted glass effect */
            border: 1px solid rgba(255, 255, 255, 0.2); /* Subtle border for depth */
            transition: all 0.3s ease;
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            font-weight: 600; /* Semi-bold for a modern look */
            text-transform: uppercase;
            letter-spacing: 2px;
            color: #0e1214;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            animation: fadeIn 1s ease-in-out;
        }

        .buttons {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .buttons button {
            padding: 15px 30px;
            font-size: 1.1rem;
            background: linear-gradient(135deg, #522745, #d3a5d1); /* Gradient buttons */
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }

        .buttons button:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.3);
        }

        #temperature, #time, #day, #month, #year {
            font-size: 2rem;
            margin: 20px 0;
            font-weight: 600;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
            animation: slideIn 1s ease-in-out;
        }

        input[type="text"] {
            padding: 12px;
            font-size: 1rem;
            width: 80%;
            margin-bottom: 20px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            color: #522745;
        }

        input[type="text"]:focus {
            outline: none;
            border-color: #522745;
            box-shadow: 0 0 10px rgba(197, 17, 203, 0.5);
            background: rgba(255, 255, 255, 0.2);
        }

        button {
            padding: 12px 24px;
            background: linear-gradient(135deg, #d4b5cb#d3a5d1); /* Gradient buttons */
            color: rgb(85, 38, 81);
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        .buttons button:last-child {
    grid-column: 1 / -1; /* Span across all columns */
    justify-self: center; /* Center the button horizontally */
    width: 50%; /* Adjust width for better appearance */
}

        button:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.3);
        }

        .error {
            color: #ff6b6b; /* Softer error color */
            font-size: 1rem;
            margin-top: 10px;
            animation: shake 0.5s ease-in-out;
        }

        /* Sliding Arrow Styles */
        .arrow {
            font-size: 2rem;
            cursor: pointer;
            padding: 10px;
            background-color: transparent;
            border: none;
            color: #fff;
            transition: transform 0.3s ease, opacity 0.3s ease;
            position: absolute;
        }

        .arrow:hover {
            transform: scale(1.2);
            opacity: 0.8;
        }

        /* Left and Right arrow positions */
        .arrow-left {
            top: 50%;
            left: 10px;
            transform: translateY(-50%);
        }

        .arrow-right {
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
        }

        /* Keyframes for animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            75% { transform: translateX(-5px); }
        }

        /* Responsive Design */
        @media (max-width: 600px) {
            .container {
                width: 90%;
                padding: 20px;
            }

            h1 {
                font-size: 2rem;
            }

            .buttons button {
                font-size: 1rem;
                padding: 12px 25px;
            }

            input[type="text"] {
                width: 90%;
            }

            .arrow {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>

    <div class="container" id="main-container">
        <h1>Welcome to the SunDial</h1>
        <div class="buttons">
            <button onclick="window.location.hash = '#temperature'">Temperature</button>
            <button onclick="window.location.hash = '#time'">Time</button>
            <button onclick="window.location.hash = '#day'">Day</button>
            <button onclick="window.location.hash = '#month'">Month</button>
            <button onclick="window.location.hash = '#year'">Year</button>
        </div>
    </div>

    <script>
        // Fetching current temperature data using WeatherAPI
        async function getTemperature(city) {
            const apiKey = 'ad4876ff88c24331bb703800251603';  // Replace with your API key
            const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=no`);
            
            if (!response.ok) {
                throw new Error('Failed to fetch temperature data');
            }
            
            const data = await response.json();

            // Get the current temperature (not max or min)
            return data.current.temp_c;  // Temperature in Celsius
        }

        // Get current date and time
        function getCurrentDateTime() {
            const now = new Date();
            const time = now.toLocaleTimeString();
            const date = now.toLocaleDateString();
            const day = now.toLocaleString('en-us', { weekday: 'long' });
            const month = now.toLocaleString('en-us', { month: 'long' });
            const year = now.getFullYear();

            return { time, date, day, month, year, currentDate: now };
        }

        // Handle displaying the content based on the URL hash
        function displayContent() {
            const container = document.getElementById('main-container');
            const hash = window.location.hash;

            if (hash === '#temperature') {
                container.innerHTML = ` 
                    <h1>Current Temperature</h1>
                    <input type="text" id="city" placeholder="Enter city name" />
                    <button onclick="searchTemperature()">Search</button>
                    <div id="temperature">Loading...</div>
                    <button onclick="goBack()">Back</button>
                    <div class="error" id="error-message"></div>
                `;
            } else if (hash === '#time') {
                container.innerHTML = ` 
                    <h1>Current Time</h1>
                    <div id="time">Loading...</div>
                    <button onclick="goBack()">Back</button>
                `;
                setInterval(() => {
                    const time = new Date().toLocaleTimeString();
                    document.getElementById('time').textContent = time;
                }, 1000);
            } else if (hash === '#day') {
                const { currentDate } = getCurrentDateTime();
                container.innerHTML = ` 
                    <h1>Today is</h1>
                    <div id="day">Loading...</div>
                    <button onclick="goBack()">Back</button>
                    <button class="arrow arrow-left" onclick="previousDay()">&#8592;</button>
                    <button class="arrow arrow-right" onclick="nextDay()">&#8594;</button>
                    <button onclick="currentDay()">Current Day</button>
                `;
                document.getElementById('day').textContent = currentDate.toLocaleString('en-us', { weekday: 'long' });
            } else if (hash === '#month') {
                const { currentDate } = getCurrentDateTime();
                container.innerHTML = ` 
                    <h1>Current Month</h1>
                    <div id="month">Loading...</div>
                    <button onclick="goBack()">Back</button>
                    <button class="arrow arrow-left" onclick="previousMonth()">&#8592;</button>
                    <button class="arrow arrow-right" onclick="nextMonth()">&#8594;</button>
                    <button onclick="currentMonth()">Current Month</button>
                `;
                document.getElementById('month').textContent = currentDate.toLocaleString('en-us', { month: 'long' });
            } else if (hash === '#year') {
                const { currentDate } = getCurrentDateTime();
                container.innerHTML = ` 
                    <h1>Current Year</h1>
                    <div id="year">Loading...</div>
                    <button onclick="goBack()">Back</button>
                    <button class="arrow arrow-left" onclick="previousYear()">&#8592;</button>
                    <button class="arrow arrow-right" onclick="nextYear()">&#8594;</button>
                    <button onclick="currentYear()">Current Year</button>
                `;
                document.getElementById('year').textContent = currentDate.getFullYear();
            } else {
                container.innerHTML = ` 
                    <h1>Welcome to the Weather & Time App</h1>
                    <div class="buttons">
                        <button onclick="window.location.hash = '#temperature'">Temperature</button>
                        <button onclick="window.location.hash = '#time'">Time</button>
                        <button onclick="window.location.hash = '#day'">Day</button>
                        <button onclick="window.location.hash = '#month'">Month</button>
                        <button onclick="window.location.hash = '#year'">Year</button>
                    </div>
                `;
            }
        }

        // Go back to the main page
        function goBack() {
            window.location.hash = '';  // This will clear the hash and return to the main page
        }

        // Search for temperature based on city input
        function searchTemperature() {
            const city = document.getElementById('city').value;
            if (city.trim() === '') {
                document.getElementById('error-message').textContent = 'Please enter a valid city name.';
                return;
            }

            document.getElementById('error-message').textContent = '';
            document.getElementById('temperature').textContent = 'Loading...';

            getTemperature(city)
                .then(temp => {
                    document.getElementById('temperature').textContent = `${temp} °C`;
                    document.getElementById('error-message').textContent = '';
                })
                .catch(error => {
                    document.getElementById('temperature').textContent = 'Failed to load temperature.';
                    document.getElementById('error-message').textContent = 'Could not find the city. Please try again.';
                    console.error(error);
                });
        }

        // Call displayContent whenever the hash changes
        window.addEventListener('hashchange', displayContent);

        // Call displayContent initially to show the default page
        displayContent();
    </script>

</body>
</html>
